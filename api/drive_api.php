<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);

header("Content-Type: application/json; charset=UTF-8");
header("Access-Control-Allow-Origin: *");

require '../vendor/autoload.php';

$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
$dotenv->load();

use Google\Client;
use Google\Service\Drive;

try {
    // === 1я╕ПтГг р╕кр╕гр╣Йр╕▓р╕З Client ===
    $client = new Client();
    $client->setAuthConfig('../credentials.json');
    $client->addScope(Drive::DRIVE_READONLY);
    $client->setAccessType('offline'); // р╕Вр╕н refresh token р╕Фр╣Йр╕зр╕в
    $client->setPrompt('select_account consent');

    // === 2я╕ПтГг р╣Вр╕лр╕ер╕Ф token.json ===
    $tokenPath = '../token.json';
    if (!file_exists($tokenPath)) {
        throw new Exception("тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╣Др╕Яр╕ер╣М token.json тАФ р╣Вр╕Ыр╕гр╕Фр╕гр╕▒р╕Щ generate_token.php р╕Бр╣Ир╕нр╕Щ");
    }

    $accessToken = json_decode(file_get_contents($tokenPath), true);
    $client->setAccessToken($accessToken);

    // === 3я╕ПтГг р╕Хр╕гр╕зр╕Ир╕зр╣Ир╕▓р╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕р╕лр╕гр╕╖р╕нр╕вр╕▒р╕З ===
    if ($client->isAccessTokenExpired()) {
        // р╕Цр╣Йр╕▓р╕бр╕╡ refresh token тЖТ р╕Вр╕н access token р╣Гр╕лр╕бр╣Ир╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤
        if ($client->getRefreshToken()) {
            $client->fetchAccessTokenWithRefreshToken($client->getRefreshToken());
            // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Б token р╣Гр╕лр╕бр╣Ир╕Чр╕▒р╕Ър╣Ар╕Фр╕┤р╕б
            file_put_contents($tokenPath, json_encode($client->getAccessToken()));
        } else {
            throw new Exception("тЪая╕П Token р╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕р╣Бр╕ер╕░р╣Др╕бр╣Ир╕бр╕╡ refresh token тАФ р╣Вр╕Ыр╕гр╕Фр╕кр╕гр╣Йр╕▓р╕Зр╣Гр╕лр╕бр╣Ир╕Фр╣Йр╕зр╕в generate_token.php");
        }
    }

    // === 4я╕ПтГг р╣Гр╕Кр╣Й Drive API ===
    $service = new Drive($client);

    // ЁЯУБ р╣Гр╕кр╣И Folder ID р╕Чр╕╡р╣Ир╣Ар╕Бр╣Зр╕Ър╕зр╕╕р╕Тр╕┤р╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓
    $folderId = '1TN6G-_B1zD21rWBWGY_i6wsD8a7PECkd';

    // р╕Фр╕╢р╕Зр╕гр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╣Др╕Яр╕ер╣Мр╣Гр╕Щр╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣М
    $response = $service->files->listFiles([
        'q' => "'$folderId' in parents and trashed = false",
        'fields' => 'files(id, name, webViewLink)',
        'pageSize' => 50
    ]);

    $files = [];
    foreach ($response->getFiles() as $file) {
        $files[] = [
            'id' => $file->getId(),
            'name' => $file->getName(),
            'webViewLink' => $file->getWebViewLink()
        ];
    }

    echo json_encode($files, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);

} catch (Exception $e) {
    http_response_code(500);
    echo json_encode(["error" => $e->getMessage()]);
}
?>